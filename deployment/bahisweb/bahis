server {
    listen 80;
    server_name 172.16.228.247;#private IP
    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/mix/src_bahis/kobocat-template;
        try_files $uri $uri/ @secondStatic;
    }
    location @secondStatic {
        root /home/mix/src_bahis/kobocat/onadata/apps/main;
        try_files $uri $uri/ @thirdStatic;
    }
    location @thirdStatic {
        root /home/mix/src_bahis/kobocat/onadata/usermodule;
        try_files $uri $uri/ @fourthStatic;
    }
    location @fourthStatic {
       # root /home/mix/src_react_form_builder/build;
        root /home/mix/src_react_form_builder_stand_alone/build;
    }
    location /media {
        alias /home/mix/src_bahis/kobocat/onadata/media;
    }
    location /form-renderer {
        #proxy_pass  http://iom-formbuilder.mpower-social.com:7991;
        proxy_pass   http://0.0.0.0:9888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location ~* \.(eot|ttf|woff|woff2)$ {
    # cors configuration
        # whitelist of allowed domains, via a regular expression
        # if ($http_origin ~* (http://localhost(:[0-9]+)?)) {
        if ($http_origin ~* .*) { # yeah, for local development. tailor your regex as needed
             set $cors "true";
        }

        # apparently, the following three if statements create a flag for "compound conditions"
        if ($request_method = OPTIONS) {
            set $cors "${cors}options";
        }

        if ($request_method = GET) {
            set $cors "${cors}get";
        }

        if ($request_method = POST) {
            set $cors "${cors}post";
        }

        # now process the flag
        if ($cors = 'trueget') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = 'truepost') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = 'trueoptions') {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';

            add_header 'Access-Control-Max-Age' 1728000; # cache preflight value for 20 days
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';

            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }


}
    location / {
        include         uwsgi_params;
        uwsgi_pass      unix:/tmp/bahis.sock;
        uwsgi_read_timeout 1300;
        uwsgi_send_timeout 1300;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
       # add_header 'Access-Control-Allow-Origin' '*' always;
}
}
